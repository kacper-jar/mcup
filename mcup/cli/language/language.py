class Language:
    strings = {
        # server.properties collector
        "COLLECTOR_SRV_PROP_MOTD": "Server motd",
        "COLLECTOR_SRV_PROP_LEVEL_NAME": "World name",
        "COLLECTOR_SRV_PROP_LEVEL_SEED": "World seed",
        "COLLECTOR_SRV_PROP_LEVEL_TYPE": "World type",
        "COLLECTOR_SRV_PROP_GENERATE_STRUCTURES": "Generate structures",
        "COLLECTOR_SRV_PROP_GENERATOR_SETTINGS": "Custom generator settings",
        "COLLECTOR_SRV_PROP_MAX_BUILD_HEIGHT": "Max build height",
        "COLLECTOR_SRV_PROP_MAX_WORLD_SIZE": "Max world size",
        "COLLECTOR_SRV_PROP_GAMEMODE": "Gamemode",
        "COLLECTOR_SRV_PROP_FORCE_GAMEMODE": "Force Gamemode",
        "COLLECTOR_SRV_PROP_DIFFICULTY": "Difficulty",
        "COLLECTOR_SRV_PROP_HARDCORE": "Hardocre",
        "COLLECTOR_SRV_PROP_PVP": "PVP",
        "COLLECTOR_SRV_PROP_ALLOW_FLIGHT": "Allow flight",
        "COLLECTOR_SRV_PROP_ALLOW_NETHER": "Allow nether",
        "COLLECTOR_SRV_PROP_ANNOUNCE_PLAYER_ACHIEVEMENTS": "Announce player achievements",
        "COLLECTOR_SRV_PROP_ENABLE_COMMAND_BLOCK": "Enable command blocks",
        "COLLECTOR_SRV_PROP_SPAWN_PROTECTION": "Spawn protection",
        "COLLECTOR_SRV_PROP_SPAWN_ANIMALS": "Spawn animals",
        "COLLECTOR_SRV_PROP_SPAWN_MONSTERS": "Spawn monsters",
        "COLLECTOR_SRV_PROP_SPAWN_NPCS": "Spawn NPCs",
        "COLLECTOR_SRV_PROP_MAX_PLAYERS": "Max players",
        "COLLECTOR_SRV_PROP_PLAYER_IDLE_TIMEOUT": "Player idle timeout",
        "COLLECTOR_SRV_PROP_WHITE_LIST": "Whitelist",
        "COLLECTOR_SRV_PROP_ENFORCE_WHITELIST": "Enforce whitelist",
        "COLLECTOR_SRV_PROP_ONLINE_MODE": "Online mode",
        "COLLECTOR_SRV_PROP_SERVER_IP": "Server IP",
        "COLLECTOR_SRV_PROP_SERVER_PORT": "Server port",
        "COLLECTOR_SRV_PROP_NETWORK_COMPRESSION_THRESHOLD": "Network compression threshold",
        "COLLECTOR_SRV_PROP_PREVENT_PROXY_CONNECTIONS": "Prevent proxy connections",
        "COLLECTOR_SRV_PROP_OP_PERMISSION_LEVEL": "Server operator (OP) permission level",
        "COLLECTOR_SRV_PROP_FUNCTION_PERMISSION_LEVEL": "Function permission level",
        "COLLECTOR_SRV_PROP_BROADCAST_CONSOLE_TO_OPS": "Broadcast console to operators",
        "COLLECTOR_SRV_PROP_BROADCAST_RCON_TO_OPS": "Broadcast RCON to operators",
        "COLLECTOR_SRV_PROP_TEXT_FILTERING_CONFIG": "Text filtering config",
        "COLLECTOR_SRV_PROP_TEXT_FILTERING_VERSION": "Text filtering version",
        "COLLECTOR_SRV_PROP_HIDE_ONLINE_PLAYERS": "Hide online players",
        "COLLECTOR_SRV_PROP_ENFORCE_SECURE_PROFILE": "Enforce secure profile",
        "COLLECTOR_SRV_PROP_PREVIEWS_CHAT": "Previews chat",
        "COLLECTOR_SRV_PROP_ACCEPTS_TRANSFERS": "Accepts transfers",
        "COLLECTOR_SRV_PROP_ENABLE_QUERY": "Enable query",
        "COLLECTOR_SRV_PROP_QUERY_PORT": "Query port",
        "COLLECTOR_SRV_PROP_ENABLE_RCON": "Enable RCON",
        "COLLECTOR_SRV_PROP_RCON_PASSWORD": "RCON password",
        "COLLECTOR_SRV_PROP_RCON_PORT": "RCON port",
        "COLLECTOR_SRV_PROP_ENABLE_STATUS": "Enable status",
        "COLLECTOR_SRV_PROP_ENABLE_JMX_MONITORING": "Enable JMX monitoring",
        "COLLECTOR_SRV_PROP_RATE_LIMIT": "Rate limit",
        "COLLECTOR_SRV_PROP_LOG_IPS": "Log IPs",
        "COLLECTOR_SRV_PROP_BUG_REPORT_LINK": "Bug report URL",
        "COLLECTOR_SRV_PROP_VIEW_DISTANCE": "View distance",
        "COLLECTOR_SRV_PROP_SIMULATION_DISTANCE": "Simulation distance",
        "COLLECTOR_SRV_PROP_MAX_TICK_TIME": "Max tick time",
        "COLLECTOR_SRV_PROP_USE_NATIVE_TRANSPORT": "Use native transport",
        "COLLECTOR_SRV_PROP_ENTITY_BROADCAST_RANGE_PERCENTAGE": "Entity broadcast range percentage",
        "COLLECTOR_SRV_PROP_SYNC_CHUNK_WRITES": "Sync chunk writes",
        "COLLECTOR_SRV_PROP_MAX_CHAINED_NEIGHBOR_UPDATES": "Max chained neighbor updates",
        "COLLECTOR_SRV_PROP_REGION_FILE_COMPRESSION": "Region file compression algorithm",
        "COLLECTOR_SRV_PROP_PAUSE_WHEN_EMPTY_SECONDS": "Pause server when empty for",
        "COLLECTOR_SRV_PROP_SNOOPER_ENABLED": "Enable Snooper (sending anonymous usage statistics to Mojang)",
        "COLLECTOR_SRV_PROP_TEXTURE_PACK": "Texture pack",
        "COLLECTOR_SRV_PROP_RESOURCE_PACK": "Resource pack",
        "COLLECTOR_SRV_PROP_RESOURCE_PACK_HASH": "Resource pack hash",
        "COLLECTOR_SRV_PROP_RESOURCE_PACK_SHA1": "Resource pack SHA1",
        "COLLECTOR_SRV_PROP_REQUIRE_RESOURCE_PACK": "Require resource pack",
        "COLLECTOR_SRV_PROP_RESOURCE_PACK_PROMPT": "Resource pack prompt",
        "COLLECTOR_SRV_PROP_RESOURCE_PACK_ID": "Resource pack ID",
        "COLLECTOR_SRV_PROP_INITIAL_ENABLED_PACKS": "Initial enabled data packs",
        "COLLECTOR_SRV_PROP_INITIAL_DISABLED_PACKS": "Initial disabled data packs",

        # Bukkit collector
        "COLLECTOR_BUKKIT_MINIMUM_API": "Minimum API",
        "COLLECTOR_BUKKIT_USE_MAP_COLOR_CACHE": "Enable color cache for maps",
        "COLLECTOR_BUKKIT_ALLOW_OLD_KEYS_IN_REGISTRY": "Allow old keys in registry",
        "COLLECTOR_BUKKIT_ENABLE_ENUM_COMPATIBILITY_MODE": "Enable enum compatibility mode",
        "COLLECTOR_BUKKIT_ALLOW_END": "Allow End",
        "COLLECTOR_BUKKIT_WARN_ON_OVERLOAD": "Warn on overload",
        "COLLECTOR_BUKKIT_PERMISSION_FILENAME": "Permission filename",
        "COLLECTOR_BUKKIT_UPDATE_FOLDER": "Update folder",
        "COLLECTOR_BUKKIT_PING_PACKET_LIMIT": "Limit ping packet",
        "COLLECTOR_BUKKIT_USE_EXACT_LOGIN_LOCATION": "Use exact login location",
        "COLLECTOR_BUKKIT_PROFILE_PLUGINS": "Profile plugins",
        "COLLECTOR_BUKKIT_CONNECTION_THROTTLE": "Throttle connections",
        "COLLECTOR_BUKKIT_QUERY_PLUGINS": "Query plugins",
        "COLLECTOR_BUKKIT_WARN_DEPRECATED_PLUGINS": "Warn about deprecated plugins",
        "COLLECTOR_BUKKIT_SHUTDOWN_MESSAGE": "Shutdown message",
        "COLLECTOR_BUKKIT_MAX_WATER_AMBIENT_CREATURES": "Max water ambient creatures",
        "COLLECTOR_BUKKIT_MAX_WATER_UNDERGROUND_CREATURES": "Max water underground creatures",
        "COLLECTOR_BUKKIT_MAX_AXOLOTLS": "Max axolotls",
        "COLLECTOR_BUKKIT_MAX_MONSTERS": "Max monsters",
        "COLLECTOR_BUKKIT_MAX_ANIMALS": "Max animals",
        "COLLECTOR_BUKKIT_MAX_WATER_ANIMALS": "Max water animals",
        "COLLECTOR_BUKKIT_MAX_AMBIENT_CREATURES": "Max ambient creatures",
        "COLLECTOR_BUKKIT_CHUNK_GC_PERIOD": "Period in ticks between checks",
        "COLLECTOR_BUKKIT_CHUNK_GC_LOAD_THRESHOLD": "Loaded chunks threshold",
        "COLLECTOR_BUKKIT_TICKS_PER_WATER_SPAWNS": "Ticks per water spawns",
        "COLLECTOR_BUKKIT_TICKS_PER_WATER_AMBIENT_SPAWNS": "Ticks per water ambient spawns",
        "COLLECTOR_BUKKIT_TICKS_PER_WATER_UNDERGROUND_CREATURE_SPAWNS": "Ticks per water underground creature spawns",
        "COLLECTOR_BUKKIT_TICKS_PER_AXOLOTL_SPAWNS": "Ticks per axolotl spawns",
        "COLLECTOR_BUKKIT_TICKS_PER_AMBIENT_SPAWNS": "Ticks per ambient spawns",
        "COLLECTOR_BUKKIT_TICKS_PER_ANIMAL_SPAWNS": "Ticks per animal spawns",
        "COLLECTOR_BUKKIT_TICKS_PER_MONSTER_SPAWNS": "Ticks per monsters spawns",
        "COLLECTOR_BUKKIT_TICKS_PER_AUTOSAVE": "Ticks per autosaves",
        "COLLECTOR_BUKKIT_AUTO_UPDATER_ENABLED": "Enable Auto-Updater",
        "COLLECTOR_BUKKIT_AUTO_UPDATER_ON_BROKEN": "Warn when broken version",
        "COLLECTOR_BUKKIT_AUTO_UPDATER_ON_UPDATE": "Warn when outdated version",
        "COLLECTOR_BUKKIT_AUTO_UPDATER_PREFERRED_CHANNEL": "Preferred update channel",
        "COLLECTOR_BUKKIT_AUTO_UPDATER_HOST": "Host to download updates from",
        "COLLECTOR_BUKKIT_AUTO_UPDATER_SUGGEST_CHANNELS": "Automatically suggest update channel",
        "COLLECTOR_BUKKIT_COMMAND_ALIASES": "Command aliases filename",
        "COLLECTOR_BUKKIT_DATABASE_USERNAME": "Database username",
        "COLLECTOR_BUKKIT_DATABASE_ISOLATION": "Database isolation",
        "COLLECTOR_BUKKIT_DATABASE_DRIVER": "Database driver",
        "COLLECTOR_BUKKIT_DATABASE_PASSWORD": "Database password",
        "COLLECTOR_BUKKIT_DATABASE_URL": "Database URL",

        # Server
        "INFO_JAVA_MINIMUM_21": "Minecraft 1.20.6 and above require at least JDK 21. BuildTools may fail. "
                                "(Azul Zulu JDK is recommended.)",
        "INFO_JAVA_MINIMUM_17": "Minecraft 1.17.1 and above require at least JDK 17. BuildTools may fail. "
                                "(Azul Zulu JDK is recommended.)",
        "INFO_JAVA_MINIMUM_16": "Minecraft 1.17 and 1.17.1 require at least JDK 16. BuildTools may fail. "
                                "(Azul Zulu JDK is recommended.)",
        "INFO_JAVA_MINIMUM_8": "Minecraft versions below 1.17 require at least JDK 8. BuildTools may fail. "
                               "(Azul Zulu JDK is recommended.",
        "ERROR_DOWNLOAD_SERVER_FAILED": "Failed to download server. HTTP {}",
        "ERROR_DOWNLOAD_BUILDTOOLS_FAILED": "Failed to download Spigot BuildTools. HTTP {}",
        "ERROR_BUILD_TOOLS_NOT_FOUND": "Spigot BuildTools not found.",
        "ERROR_SERVER_JAR_NOT_FOUND": "Server JAR file not found. "
                                      "Check BuildTools.log.txt in server folder for more info.",
        "SUCCESS_SERVER": "Server created successfully.",

        # Template
        "ERROR_TEMPLATE_WRITE_FAILED": "Failed to write template file. Details: {}",
        "ERROR_TEMPLATE_READ_FAILED": "Failed to read template file. Details: {}",
        "ERROR_TEMPLATE_NOT_FOUND": "Template not found: {}",
        "ERROR_TEMPLATE_MISSING_DATA": "Missing data inside template file: {}",
        "ERROR_TEMPLATE_INVALID_JSON_FORMAT": "Invalid JSON format in template file: {}",
        "ERROR_TEMPLATE_IMPORT_FAILED": "Error importing template: {}",
        "ERROR_TEMPLATE_EXPORT_FAILED": "Error exporting template: {}",
        "ERROR_TEMPLATE_REFRESH_FAILED": "Error refreshing template: {}",
        "SUCCESS_TEMPLATE_CREATE": "Template '{}' created successfully.",
        "SUCCESS_TEMPLATE_IMPORT": "Template imported successfully from {}.",
        "SUCCESS_TEMPLATE_EXPORT": "Template '{}' exported successfully to {}.",
        "SUCCESS_TEMPLATE_DELETE": "Template '{}' deleted successfully.",
        "SUCCESS_TEMPLATE_REFRESH": "Template '{}' refreshed successfully.",

        # Locker
        "INFO_LOCKER_UP_TO_DATE": "Locker file is already up-to-date.",
        "INFO_LOCKER_UPDATING": "Updating locker file...",
        "ERROR_LOCKER_RETRIEVE_LATEST_TIMESTAMP_FAILED": "Could not retrieve the latest update timestamp. Details: {}",
        "ERROR_LOCKER_META_READ_FAILED": "Error reading locker meta file. Details: {}",
        "ERROR_LOCKER_DOWNLOAD_FAILED": "Error downloading locker file. Details: {}",
        "ERROR_LOCKER_META_UPDATE_FAILED": "Error updating locker meta file. Details: {}",
        "SUCCESS_LOCKER": "Successfully updated locker file."
    }

    def get_string(self, key, *args):
        if args is not None:
            return self.strings.get(key, key).format(*args)
        return self.strings.get(key, key)
